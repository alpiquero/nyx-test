name: Nyx workflow
on: [push]
# Avoid running multiple pipelines concurrently to avoid overlapping releases and tags
concurrency:
  group: project
  cancel-in-progress: false

jobs:
  release-version:
    name: Publish the release (if any) with Nyx
    runs-on: ubuntu-latest
    outputs:
      newRelease: ${{ steps.nyx-publish.outputs.newRelease }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Run nyx Infer
      id: nyx-infer
      uses: mooltiverse/nyx-github-action@main
      with:
        command: infer
      env:
        NYX_VERBOSITY: 'INFO'

    - name: Bump chart versions
      if: steps.nyx-infer.outputs.newVersion == 'true'
      run: |
        ./scripts/publish.sh ${{ steps.nyx-infer.outputs.version }}

    - name: Move CHANGELOG.md to increment
      if: steps.nyx-infer.outputs.newRelease == 'true'
      run: |
        mv CHANGELOG.md changelog.old || true

    - name: Restore CHANGELOG.md
      if: steps.nyx-infer.outputs.newRelease == 'false'
      run: |
        git restore CHANGELOG.md

    - name: Nyx publish
      id: nyx-publish
      uses: mooltiverse/nyx-github-action@main
      with:
        command: 'publish'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NYX_VERBOSITY: 'INFO'
  
  publish-chart:
    name: Publish the chart
    runs-on: ubuntu-latest
    needs: release-version
    if: needs.release-version.outputs.newRelease == 'true'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Install Chart Releaser
      uses: helm/chart-releaser-action@v1.5.0
      with:
        install_only: true
        version: v1.5.0
    
    - name: Get repository name
      run: echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

    - name: Publish chart
      run: ./scripts/release_chart.sh
      env:
        REPOSITORY_OWNER: ${{ github.repository_owner }}
        REPOSITORY_NAME: ${{ env.REPOSITORY_NAME }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
